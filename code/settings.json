{
  // Terminal

  // Formatters
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.actionsOnSave": {
    "source.fixAll.eslint": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Themes + Icons
  "workbench.iconTheme": "icons",
  "workbench.colorTheme": "One Dark Vibrant",
  "workbench.colorCustomizations": {
    "[One Dark Vibrant]": {
      "editor.background": "#000000",
      "editor.lineHighlightBackground": "#211f1f",
      "terminal.foreground": "#abb2bf",
      "terminal.ansiBlack": "#1e2127",
      "terminal.ansiBlue": "#61afef",
      "terminal.ansiCyan": "#56b6c2",
      "terminal.ansiGreen": "#98C379",
      "terminal.ansiMagenta": "#c678dd",
      "terminal.ansiRed": "#e06c75",
      "terminal.ansiWhite": "#abb2bf",
      "terminal.ansiYellow": "#d19a66",
      "terminal.ansiBrightBlack": "#5c6370",
      "terminal.ansiBrightBlue": "#61afef",
      "terminal.ansiBrightCyan": "#56b6c2",
      "terminal.ansiBrightGreen": "#98c379",
      "terminal.ansiBrightMagenta": "#c678dd",
      "terminal.ansiBrightRed": "#e06c75",
      "terminal.ansiBrightWhite": "#ffffff",
      "terminal.ansiBrightYellow": "#d19a66",
      "statusBar.background": "#2E2E2e",
      "statusBar.foreground": "#569CD6",
      "statusBarItem.remoteBackground": "#2E2E2E",
      "statusBarItem.remoteForeground": "#569CD6",
      "activityBar.background": "#2E2E2E",
      "tab.inactiveBackground": "#2E2E2E"
    }
  },

  // Gitlens
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  //FONTS
  "editor.fontSize": 16,
  "editor.fontFamily": "Anonymice Nerd Font",
  "editor.fontLigatures": true,
  "editor.fontWeight": "400",
  "editor.lineHeight": 24,
  "editor.letterSpacing": 0.5,

  //WHICH KEY
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },

    {
      "key": "m",
      "name": "minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    {
      "key": "n",
      "name": "highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        }
      ]
    },
    {
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],

  // Editor Setup
  "editor.suggestSelection": "first",
  "editor.scrollbar.horizontal": "hidden",
  "editor.scrollbar.vertical": "hidden",
  "editor.cursorBlinking": "solid",
  "files.exclude": {
    "**/.git": true,
    "**/node_modules": true
  },
  "editor.minimap.enabled": false,

  /// VERY RAW BASICS
  "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.darwin": "/Users/rcool2/.config/vscode.init.vim",
  "git.ignoredRepositories": [
    "/Users/rcool2/.vscode/extensions/stepsize.stepsize-0.70.0/resources/demo-repository"
  ],
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "editor.inlineSuggest.enabled": true,
  "editor.accessibilitySupport": "off",
  "cSpell.showAutocompleteSuggestions": true,
  "window.zoomLevel": 1,
  "p42.feature.dependencyVisualization.enabled": true,
  "workbench.startupEditor": "none",
  "cSpell.userWords": [
    "datepicker",
    "dattepicker",
    "esbenp",
    "fontawesome",
    "fortawesome",
    "testid"
  ],
  "terminal.integrated.fontFamily": "PragmataProMonoLiga Nerd Font",
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.macOptionIsMeta": true,
  "editor.lineNumbers": "relative",
  "editor.renderLineHighlight": "gutter",
  "javascript.format.semicolons": "insert",
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "literals",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "javascript.suggest.completeFunctionCalls": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "wallaby.codeLensFeature.runTest": true,
  "wallaby.node": "/opt/homebrew/bin/node",
  "whichkey.useFullWidthCharacters": true,
  "quokka.automaticRestart": true,
  "quokka.automaticStartRegex": "*.ts,*js",
  "quokka.showValueOnMultilineSelection": true,
  "path-intellisense.autoSlashAfterDirectory": true,
  "path-intellisense.autoTriggerNextSuggestion": true,
  "oneDarkPro.bold": true,
  "oneDarkPro.vivid": true,
  "p42.refactoring.convertArrayFilterToFind.suggestion": "information",
  "p42.refactoring.collapsePropertyIntoShorthand.suggestion": "information",
  "p42.refactoring.convertAndAndGuardToIfStatement.suggestion": "information",
  "p42.refactoring.convertApplyToSpreadSyntax.suggestion": "information",
  "p42.refactoring.convertArrayIndexOfToArrayIncludes.suggestion": "information",
  "p42.refactoring.convertArrayTypeToGenericArray.suggestion": "information",
  "p42.refactoring.convertBracketNotationPropertyAccessToDotNotation.suggestion": "information",
  "p42.refactoring.convertComparisonChainToArrayIncludes.suggestion": "information",
  "p42.refactoring.convertConditionalExpressionToIfElse.suggestion": "information",
  "p42.refactoring.convertFunctionToArrowFunction.suggestion": "information",
  "p42.refactoring.convertFunctionToObjectMethod.suggestion": "information",
  "p42.refactoring.convertIfElseToConditionalExpression.suggestion": "information",
  "p42.refactoring.convertLetToConst.suggestion": "warning",
  "p42.refactoring.convertLoopToForOf.suggestion": "warning",
  "p42.refactoring.convertMathPowToExponentiation.suggestion": "information",
  "p42.refactoring.convertToDestructuringAssignment.suggestion": "warning",
  "p42.refactoring.convertToIncrement.suggestion": "error",
  "p42.refactoring.convertToOptionalChaining.suggestion": "error",
  "p42.refactoring.flattenArrayRestProperty.suggestion": "information",
  "p42.refactoring.inlineIntoTemplate.suggestion": "warning",
  "p42.refactoring.inlineReturn.suggestion": "information",
  "p42.refactoring.inlineVariable.suggestion": "warning",
  "p42.refactoring.introduceEarlyReturn.suggestion": "information",
  "p42.refactoring.invertCondition.suggestion": "error",
  "p42.refactoring.liftDefaultIntoParameter.suggestion": "error",
  "p42.refactoring.mergeIntoPrecedingDestructuringAssignment.suggestion": "warning",
  "p42.refactoring.mergeIntoPrecedingIfStatement.suggestion": "warning",
  "p42.refactoring.mergeNestedElseIf.suggestion": "warning",
  "p42.refactoring.mergeVariableDeclarationAndInitialization.suggestion": "warning",
  "p42.refactoring.mergeNestedIf.suggestion": "warning",
  "p42.refactoring.moveConstToOuterScope.suggestion": "error",
  "p42.refactoring.moveFirstStatementOutOfIfElse.suggestion": "warning",
  "p42.refactoring.moveLastStatementOutOfIfElse.suggestion": "warning",
  "p42.refactoring.pushDownNegation.suggestion": "error",
  "p42.refactoring.pushParameterIntoIife.suggestion": "error",
  "p42.refactoring.removeBracesFromArrowFunction.suggestion": "error",
  "p42.refactoring.removeConsoleLog.suggestion": "error",
  "p42.refactoring.removeDoubleNegation.suggestion": "error",
  "p42.refactoring.removeEmptyElseBlock.suggestion": "error",
  "p42.refactoring.removeEmptyIfBlock.suggestion": "error",
  "p42.refactoring.removeIife.suggestion": "information",
  "p42.refactoring.removeRedundantElse.suggestion": "warning",
  "p42.refactoring.removeUnnecessaryConditionalExpression.suggestion": "warning",
  "p42.refactoring.removeUnnecessaryElse.suggestion": "warning",
  "p42.refactoring.removeUnnecessaryJsxFragment.suggestion": "warning",
  "p42.refactoring.removeUnnecessaryExpressionStatement.suggestion": "error",
  "p42.refactoring.removeUnnecessaryTemplate.suggestion": "warning",
  "p42.refactoring.removeUnusedVariable.suggestion": "error",
  "p42.refactoring.replaceLodashForeach.suggestion": "warning",
  "p42.refactoring.replaceVarWithLetAndConst.suggestion": "warning",
  "p42.refactoring.replaceVoid0WithUndefined.suggestion": "warning",
  "p42.refactoring.simplifyBinaryExpression.suggestion": "error",
  "p42.refactoring.simplifySwitch.suggestion": "error",
  "p42.refactoring.splitVariableDeclaration.suggestion": "error",
  "p42.refactoring.useEqEqNull.suggestion": "error",
  "p42.refactoring.useNullishCoalescenceInDefaultExpression.suggestion": "error",
  "p42.refactoring.useStringEndsWith.suggestion": "information",
  "p42.refactoring.useStringStartsWith.suggestion": "error",
  "p42.refactoring.useTemplateLiteral.suggestion": "warning",
  "errorLens.enabledDiagnosticLevels": ["error", "warning", "info", "hint"],
  "customizeUI.activityBar": "regular",
  "customizeUI.font.monospace": "fira code mono",
  "customizeUI.font.regular": "mononoki nerd font",
  "customizeUI.titleBar": "inline",
  "window.titleBarStyle": "native",
  "colorize.languages": [
    "css",
    "sass",
    "scss",
    "less",
    "postcss",
    "sss",
    "stylus",
    "xml",
    "svg",
    "javascript",
    "typescript"
  ]
}
